L0:     PUSH         1         ; Declaring INT i1
        PUSH         1         ; Declaring INT i2
        PUSH         1         ; Declaring INT i3
        PUSH         1         ; Declaring BOOL b1
        PUSH         1         ; Declaring CHAR c1
        LOADL        1
        STORE(1)     0[SB]     ; Assigning i1
        LOADL        2
        STORE(1)     1[SB]     ; Assigning i2
        PUSH         1         ; Declaring INT i1
        LOAD(1)      1[SB]     ; Loading i2
        STORE(1)     5[SB]     ; Assigning i1
        LOAD(1)      5[SB]     ; Loading i1
        LOAD(1)      1[SB]     ; Loading i2
        LOADL        1
        CALL         eq
        JUMPIF(0)    L1[CB]    ; If (jump to else)
        PUSH         1         ; Pushing for helper register 
        LOAD(1)      5[SB]     ; Loading i1
        STORE(1)     6[SB]     ; Assigning temp
        LOAD(1)      6[SB]     ; Loading temp
        CALL         putint    ; Print int
        CALL         puteol
        LOAD(1)      6[SB]     ; Loading temp
        JUMP         L2[CB]    ; Else (jump over else)
L1:     PUSH         1         ; Pushing for helper register 
        LOADL        0
        STORE(1)     7[SB]     ; Assigning temp
        LOAD(1)      7[SB]     ; Loading temp
        CALL         putint    ; Print int
        CALL         puteol
        LOAD(1)      7[SB]     ; Loading temp
L2:     STORE(1)     2[SB]     ; Assigning i3
        LOAD(1)      2[SB]     ; Loading i3
        CALL         putint    ; Print int
        CALL         puteol
        LOADL        97        ; Loading character 'a'
        STORE(1)     4[SB]     ; Assigning c1
        LOADL        0         ; False Boolean
        JUMPIF(0)    L3[CB]    ; If (jump to else)
        LOAD(1)      4[SB]     ; Loading c1
        CALL         put       ; Print character
        CALL         puteol
L3:     LOADL        1         ; True Boolean
        JUMPIF(0)    L4[CB]    ; If (jump to else)
        LOADL        98        ; Loading character 'b'
        CALL         put       ; Print character
        CALL         puteol
L4:     LOADL        0         ; False Boolean
        JUMPIF(0)    L5[CB]    ; If (jump to else)
        LOAD(1)      0[SB]     ; Loading i1
        CALL         putint    ; Print int
        CALL         puteol
        JUMP         L6[CB]    ; Else (jump over else)
L5:     LOAD(1)      4[SB]     ; Loading c1
        CALL         put       ; Print character
        CALL         puteol
L6:     LOADL        0         ; False Boolean
        JUMPIF(0)    L7[CB]    ; If (jump to else)
        LOADL        0         ; False Boolean
        JUMP         L8[CB]    ; Else (jump over else)
L7:     LOADL        1         ; True Boolean
L8:     JUMPIF(0)    L9[CB]    ; If (jump to else)
        LOAD(1)      0[SB]     ; Loading i1
        CALL         putint    ; Print int
        CALL         puteol
        JUMP         L10[CB]   ; Else (jump over else)
L9:     LOADL        0
        CALL         putint    ; Print int
        CALL         puteol
L10:    POP(0)       8
        HALT                   ; Generated by the Noot Compiler (2013/07/09 13:20)
