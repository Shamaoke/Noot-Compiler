=== Noot ===
Language and Compiler

The compiler will compile Noot to TAM (Triangle Abstract Machine) using
a parser that has been generated by Antlr3 out of an Antlr grammar.

=== Usage ===

To run the compiler enter "java -jar NootCompiler.jar examples/example.nt".
You should always enter a file with a .nt extention. This will automatically
generate .as, .dot and .tam files. With the .as you could examine the
generated TAM instructions. The .dot is a visual representation of the AST.
And the .tam is a file you can put into the TAM Interpreter. After compilation
the program will automatically be executed.

To execute a compiled program use java "-jar TAMInterpreter.jar examples/example.tam".

The generated dot files can be opened with Graphviz (http://www.graphviz.org/).

== Compilation == 

To compile the Noot compiler use the following command: "javac -classpath lib/antlr-3.5-complete.jar
-d bin src/noot/*.java src/TAM/*.java src/noot/antlr/*.java src/noot/antlr/helpers/*.java
src/noot/ast/*.java src/noot/ast/adaptors/*.java src/noot/assembly/*.java src/noot/exceptions/*.java"

This will not include the Tests.

== Tests ==

The in- and output of the JUnit tests can be found in tests/_Results.txt.

To run the tests you should open the project in Eclipse and run CompilerTest with JUnit.

The generated .as files can be inspected for the TAM Assembly code.
